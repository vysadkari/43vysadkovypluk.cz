---
import menu from "../data/menu";

const pathName = Astro.url.pathname;
---

<div
  class='fixed top-0 left-0 right-0 z-50 backdrop-filter backdrop-blur text-[13px] bg-gradient-to-r from-black/70 to-primary/70 shadow-[0_5px_20px_0_rgb(0,0,0)]'
  x-data='{mobileMenuOpen: false}'
>
  <div
    class='container mx-auto flex flex-wrap justify-between items-center p-3 lg:p-0'
    @click.outside='mobileMenuOpen = false'
  >
    <a class='z-50' href='/'>
      <img
        src='/images/logo/logo-round.svg'
        class='absolute h-16 top-3 drop-shadow-bold'
      />
    </a>

    <button
      class='inline-block lg:hidden w-10 h-10 text-white relative'
      @click='mobileMenuOpen = !mobileMenuOpen'
    >
      <div
        class='block w-5 absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2'
      >
        <span
          aria-hidden='true'
          class='block absolute h-0.5 w-5 bg-current transform transition duration-500 ease-in-out -translate-y-1.5'
          :class="{'rotate-45': mobileMenuOpen,' -translate-y-1.5': !mobileMenuOpen}"
        ></span>
        <span
          aria-hidden='true'
          class='block absolute h-0.5 w-5 bg-current transform transition duration-500 ease-in-out'
          :class="{'opacity-0': mobileMenuOpen}"></span>
        <span
          aria-hidden='true'
          class='block absolute h-0.5 w-5 bg-current transform transition duration-500 ease-in-out translate-y-1.5'
          :class="{'-rotate-45': mobileMenuOpen, ' translate-y-1.5': !mobileMenuOpen}"
        ></span>
      </div>
    </button>

    <nav
      class='hidden lg:flex flex-col lg:flex-row items-end lg:items-center lg:space-x-5 xl:space-x-10 uppercase font-semibold px-2 w-full lg:w-auto mt-2 lg:mt-0'
      :class="{'grid grid-cols-2 md:grid-cols-3 gap-5': mobileMenuOpen, 'hidden': !mobileMenuOpen}"
    >
      {
        menu.map((item) => {
          return item.title === "|" ? (
            <span class='text-gray-500 hidden lg:inline'>|</span>
          ) : (
            <>
              <a
                class={`hover:text-white transition duration-100 py-0 lg:py-5 text-gray-300 hover:underline hidden lg:inline ${
                  item.url && pathName.startsWith(item.url) ? "underline" : ""
                }`}
                style='text-underline-offset: -1.25rem !important;'
                href={item.url}
              >
                {item.title}
              </a>

              <a
                class='border border-black drop-shadow-lg text-center text-white rounded flex lg:hidden aspect-video bg-cover bg-center text-shadow-sm'
                style={`background-image: url('${item.image}');`}
                href='/co-delame'
              >
                <div class='bg-gradient-to-t from-black via-transparent w-full h-full flex items-end justify-center p-2'>
                  <span>{item.title}</span>
                </div>
              </a>
            </>
          );
        })
      }
    </nav>
  </div>
</div>
